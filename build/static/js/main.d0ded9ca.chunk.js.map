{"version":3,"sources":["components/Person.js","components/Filter.js","components/AddPerson.js","services/persons.js","App.js","index.js"],"names":["Person","person","removePerson","name","number","onClick","Filter","newFilter","handleFilterChange","value","onChange","AddPerson","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","showAll","setShowAll","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","personsToShow","filter","toLowerCase","includes","Notification","message","className","Error","event","target","preventDefault","personObject","map","p","find","setTimeout","window","confirm","returnedPerson","console","log","catch","error","concat","eMsg","JSON","stringify","i","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0ded9ca.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({ person, removePerson}) => {\n  return (\n    <li>{person.name} {person.number} <button onClick={removePerson}>delete</button></li>\n  )\n}\n\nexport default Person","import React from 'react'\n\n\n\nconst Filter = ({ newFilter, handleFilterChange }) => {\n\n  return (\n    <div>\n    filter names: \n      <input \n      value={newFilter} \n      onChange={handleFilterChange}\n      />\n  </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst AddPerson = ({ addPerson, newName, handleNameChange\n                    , newNumber, handleNumberChange}) => {\n\n  return (\n    <form onSubmit={addPerson}>\n        <div>\n          name: \n            <input \n            value={newName} \n            onChange={handleNameChange}\n          />\n        </div>\n        <div>\n          number: \n            <input \n            value={newNumber} \n            onChange={handleNumberChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n        {/* <div>debug: {newName}</div> */}\n      </form>\n  )\n}\n\nexport default AddPerson","import axios from 'axios'\n//const baseUrl = 'http://localhost:3001/api/persons'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n  }\n\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\n//import axios from 'axios'\nimport Person from './components/Person'\nimport Filter from './components/Filter'\nimport AddPerson from './components/AddPerson'\nimport personService from './services/persons'\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  \n  \n  useEffect(() => {\n    personService\n    .getAll()\n    .then(initialPersons => {\n      setPersons(initialPersons)\n    })\n  }, [])\n\n  const personsToShow = showAll\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n\n  const addPerson = (event) => {\n\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number : newNumber\n    }\n    \n    const names = persons.map(person => person.name)\n    // console.log(names.includes(newName))\n\n    if (names.includes(newName)) {\n      const p = persons.find(p => p.name === newName)\n\n      if (newNumber === p.number) {\n        //alert(`${newName} is already added to phonebook`)\n        setNotificationMessage(\n          `${newName} is already added to phonebook`\n        )\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n        setNewName('')\n        setNewNumber('')\n      } else if (newNumber !== p.number) {\n          const result = window.confirm(`${newName} is already in database with different number. Do you want to update number information?`)\n          if (result) {\n            personService\n              .update(p.id, personObject)\n              .then(returnedPerson => {\n                console.log('Number updated')\n                setNotificationMessage(\n                  `Number for ${newName} updated`\n                )\n                setTimeout(() => {\n                  setNotificationMessage(null)\n                }, 5000)\n                setPersons(persons.map(person => person.id !== p.id ? person : returnedPerson))\n              })\n              .catch(error => {\n                setErrorMessage(\n                  `the person '${p.name}' was already deleted from server!`\n                )\n                setTimeout(() => {\n                  setErrorMessage(null)\n                }, 5000)\n                setPersons(persons.filter(person => person.id !== p.id))\n              })\n            setNewName('')\n            setNewNumber('')\n          }\n\n      }\n\n\n      \n      \n    } else {\n      personService\n        .create(personObject)\n          .then(returnedPerson => {\n            setNotificationMessage(\n              `Added ${newName}`\n            )\n            setTimeout(() => {\n              setNotificationMessage(null)\n            }, 5000)\n            setPersons(persons.concat(returnedPerson))\n            setNewName('')\n            setNewNumber('')\n          })\n          .catch(error => {\n            console.log(error.response.data)\n            const eMsg = JSON.stringify(error.response.data)\n            setErrorMessage(\n              `${eMsg}`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n            setNewName('')\n            setNewNumber('')\n          })\n          \n    } \n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n    if (!newFilter === \"\") {\n      setShowAll(true)\n    } else {\n      setShowAll(false)\n    }\n  }\n\n  const removePerson = (id, name) => {\n    const result = window.confirm(`Do you really want to remove ${name} from database?`)\n    if (result) {\n      personService\n        .remove(id)\n          .then(() => {\n            console.log(`${name} removed from database`)\n            setNotificationMessage(\n              `${name} removed from database`\n            )\n            setTimeout(() => {\n              setNotificationMessage(null)\n            }, 5000)\n            setPersons(persons.filter(person => person.id !== id))\n\n          }\n            \n          )\n    }\n    \n  }\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"info\">\n        {message}\n      </div>\n    )\n  }\n\n  const Error = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} />\n      <Error message={errorMessage} />\n\n        <Filter value={newFilter} handleFilterChange={handleFilterChange}/>\n        \n\n      <h2>Add new</h2>\n\n      <AddPerson addPerson={addPerson} newName={newName} \n                  handleNameChange={handleNameChange} newNumber={newNumber} \n                  handleNumberChange={handleNumberChange} />\n\n      \n      <h2>Numbers</h2>\n      <ul>\n        {personsToShow.map((person, i) =>\n          <Person \n            key={i} \n            person={person} \n            removePerson={() => removePerson(person.id, person.name)}\n            />\n        )}\n      </ul>\n      \n    </div>\n  )\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}